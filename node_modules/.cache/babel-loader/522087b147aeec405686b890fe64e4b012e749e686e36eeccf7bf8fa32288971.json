{"ast":null,"code":"const INITIAL_VALUE = {\n  fav: []\n};\n// he can see action so he can compare between the initial value and payload (new Value)\n// make reduce to see my action type\nconst AddToFav = (state = INITIAL_VALUE, action) => {\n  // better use switch\n  // if type ADD TO FAV the function will be implemented according to switch\n  switch (action.type) {\n    case \"ADD_TO_FAV\":\n      return {\n        ...state,\n        // basically i will create empty array\n        // spreading the old with new to merge both arrays\n        // 5od balk spread takes copy of the array and modify it\n        // 3ks l push modify l exisitng array\n        fav: [...state.fav, action.payload]\n      };\n    default:\n      // in this case state will return empty array since nothing hasnt been pushed yet\n      return state;\n  }\n};\n_c = AddToFav;\nexport default AddToFav;\nvar _c;\n$RefreshReg$(_c, \"AddToFav\");","map":{"version":3,"names":["INITIAL_VALUE","fav","AddToFav","state","action","type","payload","_c","$RefreshReg$"],"sources":["/home/amr/E-commerce-Project/src/store/reducers/favorutieReducer.js"],"sourcesContent":["const INITIAL_VALUE = {\n  fav: [],\n};\n// he can see action so he can compare between the initial value and payload (new Value)\n// make reduce to see my action type\nconst AddToFav = (state = INITIAL_VALUE, action) => {\n  // better use switch\n  // if type ADD TO FAV the function will be implemented according to switch\n  switch (action.type) {\n    case \"ADD_TO_FAV\":\n      return {\n        ...state,\n        // basically i will create empty array\n        // spreading the old with new to merge both arrays\n        // 5od balk spread takes copy of the array and modify it\n        // 3ks l push modify l exisitng array\n        fav: [...state.fav, action.payload],\n      };\n    default:\n      // in this case state will return empty array since nothing hasnt been pushed yet\n      return state;\n  }\n};\n\nexport default AddToFav;\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG;EACpBC,GAAG,EAAE;AACP,CAAC;AACD;AACA;AACA,MAAMC,QAAQ,GAAGA,CAACC,KAAK,GAAGH,aAAa,EAAEI,MAAM,KAAK;EAClD;EACA;EACA,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO;QACL,GAAGF,KAAK;QACR;QACA;QACA;QACA;QACAF,GAAG,EAAE,CAAC,GAAGE,KAAK,CAACF,GAAG,EAAEG,MAAM,CAACE,OAAO;MACpC,CAAC;IACH;MACE;MACA,OAAOH,KAAK;EAChB;AACF,CAAC;AAACI,EAAA,GAjBIL,QAAQ;AAmBd,eAAeA,QAAQ;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}