{"ast":null,"code":"import * as yup from \"yup\";\nconst loginPat = /^[a-zA-Z0-9._]+@[a-z]{1,8}\\.(com|eg|gov|edu)$/;\nconst passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@#$%^&+=])(?=.*[^\\w\\d\\s]).{8,}$/;\nconst ValidSchema = yup.object().shape({\n  email: yup.string().email(\"Please Enter a Valid Email\").required(\"Must Add Email\").matches(loginPat, \"Email Didn't Meet Requriments should contain @ and .\"),\n  password: yup.string().min(8).max(20).matches(passwordRegex, \"Password Requriment Error\").required(\"Password Must Match\").required(\"Must Fill this Field\"),\n  repeatPassword: yup.string().oneOf([yup.ref(\"password\"), null], \"Password Must Match\").required(\"Must Fill this Field\"),\n  username: yup.string().min(3, \"Must be Minimum 3 letters\").max(10, \"Maximum 10 Letters\").required(\"Must Fill this Field\"),\n  fullname: yup.string().min(3, \"Name must be at Least 3 Letters\").max(15, \"Name must be Maximum 15 Letters\").required(\"Must Fill this Field\")\n});\nexport default ValidSchema;","map":{"version":3,"names":["yup","loginPat","passwordRegex","ValidSchema","object","shape","email","string","required","matches","password","min","max","repeatPassword","oneOf","ref","username","fullname"],"sources":["/home/amr/E-commerce-Project/src/schema/registerSchemaYup.js"],"sourcesContent":["import * as yup from \"yup\";\n\nconst loginPat = /^[a-zA-Z0-9._]+@[a-z]{1,8}\\.(com|eg|gov|edu)$/;\nconst passwordRegex =\n  /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@#$%^&+=])(?=.*[^\\w\\d\\s]).{8,}$/;\n\nconst ValidSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"Please Enter a Valid Email\")\n    .required(\"Must Add Email\")\n    .matches(loginPat, \"Email Didn't Meet Requriments should contain @ and .\"),\n  password: yup\n    .string()\n    .min(8)\n    .max(20)\n    .matches(passwordRegex, \"Password Requriment Error\")\n    .required(\"Password Must Match\")\n    .required(\"Must Fill this Field\"),\n  repeatPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Password Must Match\")\n    .required(\"Must Fill this Field\"),\n  username: yup\n    .string()\n    .min(3, \"Must be Minimum 3 letters\")\n    .max(10, \"Maximum 10 Letters\")\n    .required(\"Must Fill this Field\"),\n  fullname: yup\n    .string()\n    .min(3, \"Name must be at Least 3 Letters\")\n    .max(15, \"Name must be Maximum 15 Letters\")\n    .required(\"Must Fill this Field\"),\n});\n\nexport default ValidSchema;\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,MAAMC,QAAQ,GAAG,+CAA+C;AAChE,MAAMC,aAAa,GACjB,sEAAsE;AAExE,MAAMC,WAAW,GAAGH,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACrCC,KAAK,EAAEN,GAAG,CACPO,MAAM,CAAC,CAAC,CACRD,KAAK,CAAC,4BAA4B,CAAC,CACnCE,QAAQ,CAAC,gBAAgB,CAAC,CAC1BC,OAAO,CAACR,QAAQ,EAAE,sDAAsD,CAAC;EAC5ES,QAAQ,EAAEV,GAAG,CACVO,MAAM,CAAC,CAAC,CACRI,GAAG,CAAC,CAAC,CAAC,CACNC,GAAG,CAAC,EAAE,CAAC,CACPH,OAAO,CAACP,aAAa,EAAE,2BAA2B,CAAC,CACnDM,QAAQ,CAAC,qBAAqB,CAAC,CAC/BA,QAAQ,CAAC,sBAAsB,CAAC;EACnCK,cAAc,EAAEb,GAAG,CAChBO,MAAM,CAAC,CAAC,CACRO,KAAK,CAAC,CAACd,GAAG,CAACe,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,EAAE,qBAAqB,CAAC,CACzDP,QAAQ,CAAC,sBAAsB,CAAC;EACnCQ,QAAQ,EAAEhB,GAAG,CACVO,MAAM,CAAC,CAAC,CACRI,GAAG,CAAC,CAAC,EAAE,2BAA2B,CAAC,CACnCC,GAAG,CAAC,EAAE,EAAE,oBAAoB,CAAC,CAC7BJ,QAAQ,CAAC,sBAAsB,CAAC;EACnCS,QAAQ,EAAEjB,GAAG,CACVO,MAAM,CAAC,CAAC,CACRI,GAAG,CAAC,CAAC,EAAE,iCAAiC,CAAC,CACzCC,GAAG,CAAC,EAAE,EAAE,iCAAiC,CAAC,CAC1CJ,QAAQ,CAAC,sBAAsB;AACpC,CAAC,CAAC;AAEF,eAAeL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}